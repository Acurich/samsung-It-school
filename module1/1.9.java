//Разработайте метод SumOfDigits, который принимает в качестве аргумента целое неотрицательное число n(0≤n≤109) и возвращает сумму его цифр.
//Метод SumOfDigits должен:
//быть членом класса NumberDigits;
//иметь спецификатор доступа public;
//быть статическим.
public class NumberDigits {
  public static int SumOfDigits(int x) {
    var result = 0;
    while (x > 0) {
      result += x % 10;
      x /= 10;
    }
    return result;
  }
}
 
//Разработайте метод SumOfSeven, который который принимает в качестве аргументов два целых неотрицательных числа a,b(0≤a,b≤109) и возвращает сумму цифр во всех двузначных натуральных числах, кратных 7 на отрезке [a;b].
//Метод SumOfSeven должен:
//быть членом класса NumberDigits;
//иметь спецификатор доступа public;
//быть статическим.



//Разработайте метод SumOfThirteen, который который принимает в качестве аргумента целое неотрицательное число n(0≤n≤104) и возвращает количество целых неотрицательных чисел, меньших n, сумма цифр которых кратна 13.
//Метод SumOfThirteenдолжен:
//быть членом класса NumberDigits;
//иметь спецификатор доступа public;
//быть статическим




//Разработайте метод BinFraction, который который принимает в качестве аргументов вещественное число x(0<x≤20) и целое положительное число n(0<n≤10) и выводит на экран n первых двоичных разрядов дробной части числа x.
//Метод BinFraction должен:
//быть членом класса NumberDigits;
//иметь спецификатор доступа public;
//быть статическим.



//Разработайте метод avgOf4Digit, который который принимает в качестве аргумента массив целых чисел и возвращает вещественное число типа double - среднее арифметическое элементов массива, которые являются четырехзначными натуральными числами. Элементы массива по абсолютной величине не превосходят 109. Количество элементов массива не превосходит 104.
//Если в массиве нет таких чисел, метод должен вернуть число -1.
//Метод avgOf4Digit должен:
//быть членом класса MyArrays;
//иметь спецификатор доступа public;
//быть статическим.




//Разработайте метод minToBegin, который принимает в качестве аргумента массив целых чисел, находит наименьший элемент массива и переставляет его в начало массива (под индексом 0). Остальные элементы сдвигаются, соответственно, вправо, на одну позицию. Если в массиве несколько одинаковых наименьших элементов, переставлять нужно тот из них, который имеет наименьший номер. Элементы массива по абсолютной величине не превосходят 109. Количество элементов массива не превосходит 104.
//Метод minToBegin должен:
//быть членом класса MyArrays;
//иметь спецификатор доступа public;
//быть статическим.


